{
  "openapi": "3.0.0",
  "info": {
    "title": "Node.js API",
    "version": "1.0.0",
    "description": "A simple CRUD API with Express and Prisma"
  },
  "tags": [
    {
      "name": "User",
      "description": "User related"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "name"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's email."
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The user's password."
                  },
                  "name": {
                    "type": "string",
                    "description": "The user's name."
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "The user's photo."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          }
        }
      },
      "get": {
        "tags": ["User"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "The page number to retrieve"
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "The number of users to retrieve per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "name": { "type": "string" },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "The user's photo."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
